/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
/* stylelint-disable selector-list-comma-newline-after */
/**
 * Reset styles and setup.
 */
:root {
  font-size: medium; }

html {
  background-color: white; }

html, body, div, span,
article, aside, footer, header, nav, section,
h1, h2, h3, h4, h5, h6,
p, em, strike, strong, code,
a, button,
figure, figcaption, img {
  margin: 0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
  font: inherit;
  font-size: 100%;
  font-style: normal;
  vertical-align: baseline; }
  html::before, html::after, body::before, body::after, div::before, div::after, span::before, span::after,
  article::before,
  article::after, aside::before, aside::after, footer::before, footer::after, header::before, header::after, nav::before, nav::after, section::before, section::after,
  h1::before,
  h1::after, h2::before, h2::after, h3::before, h3::after, h4::before, h4::after, h5::before, h5::after, h6::before, h6::after,
  p::before,
  p::after, em::before, em::after, strike::before, strike::after, strong::before, strong::after, code::before, code::after,
  a::before,
  a::after, button::before, button::after,
  figure::before,
  figure::after, figcaption::before, figcaption::after, img::before, img::after {
    box-sizing: inherit; }

article,
aside,
footer,
header,
main,
nav,
section {
  display: block; }

a {
  color: inherit;
  font-weight: 700;
  transition: color 250ms ease; }
  a:focus, a:hover {
    text-decoration: underline; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700; }

em {
  font-style: italic; }

strong {
  font-weight: 700; }

ol, ul {
  list-style-type: circle;
  margin: 0;
  padding: 0; }

figure {
  display: block;
  height: auto;
  margin: 0;
  max-width: 100%; }

figcaption {
  font-size: 0.75rem; }

img {
  display: block;
  height: auto;
  max-width: 100%;
  width: 100%; }

svg {
  display: block;
  height: auto;
  pointer-events: none;
  width: 100%; }

p code,
li code {
  background-color: aliceblue;
  border: 1px solid lightgray;
  border-radius: 2px;
  font: 400 90% 'Courier', monospace;
  padding: 0 0.3em; }

hr {
  margin-left: auto;
  margin-right: auto;
  height: 1px;
  border: none;
  background-color: lightgray;
  width: 80%;
  margin-bottom: 1.75rem; }

[role="main"] {
  /* tbd */ }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
/* stylelint-disable selector-list-comma-newline-after */
/**
 * Reset styles and setup.
 */
:root {
  font-size: medium; }

html {
  background-color: white; }

html, body, div, span,
article, aside, footer, header, nav, section,
h1, h2, h3, h4, h5, h6,
p, em, strike, strong, code,
a, button,
figure, figcaption, img {
  margin: 0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
  font: inherit;
  font-size: 100%;
  font-style: normal;
  vertical-align: baseline; }
  html::before, html::after, body::before, body::after, div::before, div::after, span::before, span::after,
  article::before,
  article::after, aside::before, aside::after, footer::before, footer::after, header::before, header::after, nav::before, nav::after, section::before, section::after,
  h1::before,
  h1::after, h2::before, h2::after, h3::before, h3::after, h4::before, h4::after, h5::before, h5::after, h6::before, h6::after,
  p::before,
  p::after, em::before, em::after, strike::before, strike::after, strong::before, strong::after, code::before, code::after,
  a::before,
  a::after, button::before, button::after,
  figure::before,
  figure::after, figcaption::before, figcaption::after, img::before, img::after {
    box-sizing: inherit; }

article,
aside,
footer,
header,
main,
nav,
section {
  display: block; }

a {
  color: inherit;
  font-weight: 700;
  transition: color 250ms ease; }
  a:focus, a:hover {
    text-decoration: underline; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700; }

em {
  font-style: italic; }

strong {
  font-weight: 700; }

ol, ul {
  list-style-type: circle;
  margin: 0;
  padding: 0; }

figure {
  display: block;
  height: auto;
  margin: 0;
  max-width: 100%; }

figcaption {
  font-size: 0.75rem; }

img {
  display: block;
  height: auto;
  max-width: 100%;
  width: 100%; }

svg {
  display: block;
  height: auto;
  pointer-events: none;
  width: 100%; }

p code,
li code {
  background-color: aliceblue;
  border: 1px solid lightgray;
  border-radius: 2px;
  font: 400 90% 'Courier', monospace;
  padding: 0 0.3em; }

hr {
  margin-left: auto;
  margin-right: auto;
  height: 1px;
  border: none;
  background-color: lightgray;
  width: 80%;
  margin-bottom: 1.75rem; }

[role="main"] {
  /* tbd */ }

:root {
  font-size: medium; }

body {
  background-color: white;
  color: black;
  font-family: 'Consolas', 'Monaco', 'Andale Mono', monospace;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.3;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  text-rendering: optimizeSpeed;
  -moz-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: keep-all; }

img {
  display: block;
  height: auto;
  max-width: 100%; }

svg {
  display: block;
  height: auto;
  pointer-events: none;
  width: 100%; }

h1 {
  border-bottom: 1px solid rgba(0, 0, 0, 0.3);
  font-size: 2.25rem;
  margin-bottom: 1.25rem;
  padding: 1.25rem 0; }

h2 {
  font-size: 1.875rem; }

h3 {
  font-size: 1.25rem; }

p:not(:last-child) {
  margin-bottom: 1.75rem; }

a {
  color: #0000FF;
  text-decoration: none; }
  a:hover, a:focus {
    text-decoration: underline; }

abbr {
  border-bottom: 1px dotted rgba(0, 0, 0, 0.4);
  cursor: help;
  text-decoration: none; }

::-moz-selection {
  background-color: black;
  color: white; }

::selection {
  background-color: black;
  color: white; }

.site {
  margin-left: auto;
  margin-right: auto;
  width: calc((((100vw - .75rem * 2) / 8 - 0.4375rem) * 8) + .5rem * 7); }
  @media (min-width: 64rem) {
    .site {
      width: calc((((100vw - 1.875rem * 2) / 12 - 1.1458rem) * 12) + 1.25rem * 11);
      max-width: calc((((80rem - 1.875rem * 2) / 12 - 1.1458rem) * 12) + 1.25rem * 11); } }

.header {
  margin-bottom: 6.25rem; }

.section {
  margin-bottom: 6.25rem; }

.section-header {
  margin-bottom: 1.25rem; }

.screen-reader-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.skip-link {
  margin-left: auto;
  margin-right: auto;
  background-color: white;
  color: inherit;
  left: 0;
  opacity: 0;
  overflow: hidden;
  padding: 0.3125rem;
  position: absolute;
  right: 0;
  text-align: center;
  text-decoration: none;
  top: 0;
  transform: translateY(-100%);
  transition: all 150ms ease-in-out;
  width: 9.375rem;
  z-index: -1; }
  .skip-link:focus {
    opacity: 1;
    transform: translateY(0);
    z-index: 2147483647; }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
.popup__wrapper___2mfod {
  display: inline-block;
  position: relative;
  width: 100%; }
  @media (min-width: 64rem) {
    .popup__wrapper___2mfod {
      width: auto; } }

.popup__button___2oSBX {
  align-items: center;
  border: 1px solid black;
  color: black;
  display: inline-flex;
  justify-content: center;
  padding: 0.625rem;
  transition: background-color 200ms, color 200ms; }
  .popup__button___2oSBX[role="button"] {
    align-items: center;
    border: 1px solid black;
    color: black;
    display: inline-flex;
    justify-content: center;
    padding: 0.625rem;
    transition: background-color 200ms, color 200ms; }
    .popup__button___2oSBX[role="button"]:hover, .popup__button___2oSBX[role="button"]:focus {
      text-decoration: none; }
    .popup__button___2oSBX[role="button"]:hover, .popup__button___2oSBX[role="button"]:focus {
      background-color: black;
      color: white; }
  .popup__button___2oSBX:hover, .popup__button___2oSBX:focus {
    background-color: black;
    color: white; }

.popup__info___3thCC {
  background-color: white;
  border: 1px solid;
  left: 0;
  padding: 0.625rem;
  position: absolute;
  top: 100%;
  width: 100%;
  z-index: 2; }
  @media (min-width: 64rem) {
    .popup__info___3thCC {
      left: calc(100% + 1.25rem);
      padding: 1.25rem;
      width: calc((((100vw - 1.875rem * 2) / 12 - 1.1458rem) * 6) + 1.25rem * 5);
      max-width: calc((((80rem - 1.875rem * 2) / 12 - 1.1458rem) * 6) + 1.25rem * 5);
      top: 50%;
      transform: translateY(-50%); } }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
.tablist__list___1Ndvo {
  border: 1px solid;
  border-bottom: none;
  display: inline-flex;
  list-style-type: none;
  position: relative;
  z-index: 1; }

.tablist__list-item___3ohi5:not(:last-child) {
  /* stylelint-disable-line selector-max-specificity */
  border-right: 1px solid; }

[role="tab"] {
  border-bottom: 1px solid black;
  display: block;
  padding: 1.25rem; }
  [role="tab"][aria-selected="true"] {
    border-bottom-color: white; }

.tablist__panel___3LIHO {
  border: 1px solid;
  padding: 1.25rem;
  position: relative;
  top: -1px;
  width: 100%; }
  @media (min-width: 64rem) {
    .tablist__panel___3LIHO {
      width: 50%; } }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
.listbox__wrapper___3oIYc {
  position: relative; }

.listbox__button___2Lnmh {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 0;
  border: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  padding: 0;
  align-items: center;
  border: 1px solid black;
  color: black;
  display: inline-flex;
  justify-content: center;
  padding: 0.625rem;
  transition: background-color 200ms, color 200ms; }
  .listbox__button___2Lnmh:hover, .listbox__button___2Lnmh:focus {
    background-color: black;
    color: white; }

.listbox__list___1kXd3 {
  background-color: #fff;
  border-radius: 2px;
  border: 1px solid rgba(12, 18, 28, 0.12);
  left: 0;
  list-style-type: none;
  max-height: 13.5rem;
  outline: none;
  -webkit-overflow-scrolling: touch;
  overflow-y: scroll;
  position: absolute;
  top: 0; }

.listbox__list-item___FAKpW {
  align-items: center;
  justify-content: center;
  padding: 0.625rem; }
  .listbox__list-item___FAKpW[aria-selected="true"] {
    background-color: black;
    color: white; }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
.menu__nav___3Vy_l {
  /* tbd */ }

.menu__list___3AHuN {
  list-style-position: inside; }

.menu__list-item___1uTC_ {
  /* tbd */ }

.menu__has-children___c6sJE {
  /* tbd */ }

.menu__sub-list___3w9jR {
  margin-left: 1.25rem;
  margin-top: 0.625rem; }

.menu__list-item___1uTC_:not(:last-child) {
  margin-bottom: 0.625rem; }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
.dialog__dialog___3UUuL {
  background-color: white;
  border: 1px solid black;
  height: -webkit-max-content;
  height: -moz-max-content;
  height: max-content;
  inset: 0;
  margin: auto;
  max-height: calc(100vh - .75rem * 2);
  max-width: 31.25rem;
  overflow-y: scroll;
  padding: 1.75rem 0.625rem 0.625rem 0.625rem;
  position: fixed;
  width: calc(100vw - .75rem * 2);
  z-index: 1; }
  @media (prefers-reduced-motion: no-preference) {
    .dialog__dialog___3UUuL {
      transition: transform 300ms ease-in-out; } }
  .dialog__dialog___3UUuL:not([aria-hidden]), .dialog__dialog___3UUuL[aria-hidden="true"] {
    transform: translateY(-250%); }
  @media (min-width: 64rem) {
    .dialog__dialog___3UUuL {
      padding: 1.75rem;
      width: 31.25rem; } }

.dialog__link___29suk[role="button"] {
  align-items: center;
  border: 1px solid black;
  color: black;
  display: inline-flex;
  justify-content: center;
  padding: 0.625rem;
  transition: background-color 200ms, color 200ms; }
  .dialog__link___29suk[role="button"]:hover, .dialog__link___29suk[role="button"]:focus {
    text-decoration: none; }
  .dialog__link___29suk[role="button"]:hover, .dialog__link___29suk[role="button"]:focus {
    background-color: black;
    color: white; }

.dialog__closeButton___pBXw4 {
  background-color: black;
  color: white;
  padding: 0.1875rem;
  position: absolute;
  right: 0;
  top: 0; }

.site[aria-hidden="true"] {
  opacity: 0.3;
  pointer-events: none; }

.dialog__doc-link___2RaPu {
  display: block; }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
.menubar__nav___3sKJ3 {
  border-bottom: 1px solid;
  border-top: 1px solid;
  padding: 1.25rem 0;
  width: 100%; }
  @media (min-width: 64rem) {
    .menubar__nav___3sKJ3 {
      padding: 1.25rem; } }

.menubar__list___6Sh-s {
  display: flex;
  justify-content: space-between;
  list-style-type: none; }

.menubar__list-item___20MNG {
  position: relative; }

.menubar__has-children___303w5 {
  /* tbd */ }

.menubar__sub-list___3zYcF {
  background-color: white;
  border: 1px solid;
  left: 0;
  list-style-type: none;
  padding: 10px;
  position: absolute;
  top: calc(100% + 1.25rem);
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content; }
  .menubar__sub-list___3zYcF .menubar__list-item___20MNG:not(:last-child) {
    /* stylelint-disable-line selector-max-specificity */
    margin-bottom: 0.625rem; }

.menubar__list-item___20MNG {
  /* tbd */ }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
.disclosure__list___1AiFp {
  list-style-type: none; }
  @media (min-width: 64rem) {
    .disclosure__list___1AiFp {
      width: 50%; } }

.disclosure__list-item___Jkcxx {
  margin-bottom: 1rem; }

.disclosure__button___3dxoV {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 0;
  border: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  padding: 0;
  cursor: pointer; }

.disclosure__info___23-hV {
  padding: 0.625rem; }

/**
 * Strip CSS units from a value.
 *
 * @param {String} $value A CSS length value.
 *
 * @returns {String} A unitless value.
 */
/**
 * Convert px to rem or em
 * Unitless values are assumed to be in px
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {String} A rem value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to either rem or em
 *
 * @param {Number|List} $values Single value or list of values to convert
 * @param {Number} $base-value  Root font size on which to base conversions
 *
 * @returns {List|Number} A list of rem values, or a single value.
 */
/**
 * Convert a list of px values (with or without the 'px' string) to rem
 *
 * @param {List}   $values Single value or list of values to convert
 * @param {Number} $base-value Root font size on which to base conversions
 */
/**
 * Negate a number _the Sass way_
 *
 * @param  {Number} $value The number to be negated.
 * @return {Number}
 */
/**
 * Remove browser default form element styles.
 */
/**
 * Remove browser default button styles.
 */
/**
 * Create the breakpoint media conditions based on the above Map.
 *
 * @return {map}
 */
/**
 * Get a min-width media condition.
 *
 * @param  {string} $key The breakpoint size.
 * @return {string}
 */
/**
 * Centered block.
 */
/**
 * Site edge padding.
 */
/**
 * Full-width container.
 */
/**
 * Site-width container with no edge spacing.
 */
/**
 * Content-width container.
 */
/**
 * Content-width container + edge padding for full-bleed background-color.
 */
/**
 * Ensures a tidy-columns property applies to all screen sizes.
 */
/**
 * Invert text background and color.
 */
/**
 * Button styles.
 */
/**
 * Visually hide an element and leave it only for screenreaders
 */
/**
 * Adds focus ring outline.
 */
/**
 * Ensure Windows high-contrast mode outline for non-standard focus styles.
 */
/**
 * Remove hover and focus underline for a given link.
 */
/**
 * Kill text underline for elements with role=button.
 */
/**
 * Styles the 'Skip to content' link; hidden until it has focus.
 */
.menubutton__wrapper___ewinl {
  display: inline-block;
  position: relative;
  width: 100%; }

.menubutton__button___3RCmL {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 0;
  border: none;
  font: inherit;
  margin: 0;
  background-color: transparent;
  padding: 0;
  align-items: center;
  border: 1px solid black;
  color: black;
  display: inline-flex;
  justify-content: center;
  padding: 0.625rem;
  transition: background-color 200ms, color 200ms; }
  .menubutton__button___3RCmL[role="button"] {
    align-items: center;
    border: 1px solid black;
    color: black;
    display: inline-flex;
    justify-content: center;
    padding: 0.625rem;
    transition: background-color 200ms, color 200ms; }
    .menubutton__button___3RCmL[role="button"]:hover, .menubutton__button___3RCmL[role="button"]:focus {
      text-decoration: none; }
    .menubutton__button___3RCmL[role="button"]:hover, .menubutton__button___3RCmL[role="button"]:focus {
      background-color: black;
      color: white; }
  .menubutton__button___3RCmL:hover, .menubutton__button___3RCmL:focus {
    background-color: black;
    color: white; }

.menubutton__menu-wrapper___3DOED {
  background-color: white;
  border: 1px solid;
  left: 0;
  padding: 1.25rem;
  position: absolute;
  top: 100%; }
  @media (min-width: 64rem) {
    .menubutton__menu-wrapper___3DOED {
      width: calc((((100vw - 1.875rem * 2) / 12 - 1.1458rem) * 6) + 1.25rem * 5);
      max-width: calc((((80rem - 1.875rem * 2) / 12 - 1.1458rem) * 6) + 1.25rem * 5); } }

.menubutton__nav___aPM5j {
  /* tbd */ }

.menubutton__menu___3HJaf {
  padding-left: 1.25rem; }

.menubutton__menu-item___2tbUu {
  /* tbd */ }

.menubutton__has-children___2KPmi {
  /* tbd */ }

.menubutton__sub-menu___3FOhf {
  margin-left: 1.25rem;
  margin-top: 0.625rem; }

.menubutton__menu-item___2tbUu:not(:last-child) {
  margin-bottom: 0.625rem; }

